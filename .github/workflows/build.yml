on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: "ubuntu-latest"
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:

      # I'm too lazy to take care of this myself, see the packaged action below
      #  but this parallel deletion seems faster than what the action would do
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet &
          sudo rm -rf /usr/local/lib/android &
          sudo rm -rf /opt/ghc &
          sudo rm -rf /usr/local/share/boost &
          sudo rm -rf /opt/hostedtoolcache/CodeQL &
          # this is where python lives
          sudo rm -rf "${AGENT_TOOLSDIRECTORY}" &
          sudo docker image prune --all --force &

          wait
        shell: bash

      # https://github.com/marketplace/actions/maximize-build-disk-space
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          # 100 GiB
          root-reserve-mb: 102400
          swap-size-mb: 256
          overprovision-lvm: 'true'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - uses: "actions/checkout@v4"

      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"

#      # https://github.com/containers/buildah/issues/2521#issuecomment-884779112
#      - name: Workaround https://github.com/containers/podman/issues/22152#issuecomment-2027705598
#        run: sudo apt-get remove -y --allow-remove-essential podman crun shim-signed fuse 'libfuse*' fuse-overlayfs
#
#      - uses: actions/cache@v3
#        with:
#          path: |
#            /home/linuxbrew/.linuxbrew
#          key: linuxbrew
#
#      - name: Install podman
#        run: |
#          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#          /home/linuxbrew/.linuxbrew/bin/brew install podman

      # ERROR: Cache export is not supported for the docker driver.
      # Switch to a different driver, or turn on the containerd image store, and try again.
      # https://github.com/crazy-max/ghaction-setup-docker
      - uses: crazy-max/ghaction-setup-docker@v3
        with:
          # version: v24.0.6
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }

      # https://github.com/containers/podman/issues/16192#issuecomment-1280048847
      # podman is apparently less space-efficient than docker and runs out of disk space building cuda bases
      - uses: docker/setup-buildx-action@v3
        with:
          # reuse built things directly in subsequent builds
          # https://github.com/moby/buildkit/issues/2343#issuecomment-1177000949
          driver: docker

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          make all PATH="${{ github.workspace }}/.github/path:/home/linuxbrew/.linuxbrew/bin:${PATH}" RELEASE="cache" DATE="cache"
        shell: bash
        env:
          CACHE_IMAGE: ghcr.io/${{ github.repository }}/workbench-images/build-cache
        working-directory: base

      - run: |
          make all PATH="${{ github.workspace }}/.github/path:/home/linuxbrew/.linuxbrew/bin:${PATH}" RELEASE="cache" DATE="cache"
        shell: bash
        env:
          CACHE_IMAGE: ghcr.io/${{ github.repository }}/workbench-images/build-cache
        working-directory: cuda-layer
